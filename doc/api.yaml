openapi: 3.0.0
info:
  title: 'Nest NodeJS 2021Q2'
  description: 'NestJS, TypeORM, PostgresDB'
  version: '1.0'
  contact: {}
tags:
  -
    name: nest
    description: ""
servers: []
components:
  schemas:
    CreateUserDto:
      type: object
      properties:
        name:
          type: string
        login:
          type: string
        password:
          type: string
          minimum: 6
      required:
        - name
        - login
        - password
    ResponseUserDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        login:
          type: string
      required:
        - id
        - name
        - login
    UpdateUserDto:
      type: object
      properties: {}
    CreateBoardDto:
      type: object
      properties:
        title:
          type: string
        columns:
          type: array
          items:
            type: string
      required:
        - title
        - columns
    Column:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        order:
          type: number
      required:
        - id
        - title
        - order
    ResponseBoardDto:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        columns:
          $ref: '#/components/schemas/Column'
      required:
        - id
        - title
        - columns
    UpdateBoardDto:
      type: object
      properties: {}
    CreateTaskDto:
      type: object
      properties:
        title:
          type: string
        order:
          type: number
        description:
          type: string
        userId:
          type: string
        boardId:
          type: string
        columnId:
          type: string
      required:
        - title
        - order
        - description
        - userId
        - boardId
        - columnId
    ResponseTaskDto:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        order:
          type: number
        description:
          type: string
        userId:
          type: string
        boardId:
          type: string
        columnId:
          type: string
      required:
        - id
        - title
        - order
        - description
        - userId
        - boardId
        - columnId
    UpdateTaskDto:
      type: object
      properties: {}
paths:
  /:
    get:
      operationId: AppController_root
      parameters: []
      responses:
        '200':
          description: ""
  /login:
    post:
      operationId: AppController_login
      parameters: []
      responses:
        '201':
          description: ""
  /users:
    post:
      operationId: UsersController_create
      summary: 'Create one User ðŸ‘»'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
      responses:
        '201':
          description: 'The found record'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseUserDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        -
          bearer: []
    get:
      operationId: UsersController_findAll
      summary: 'Retrieve many Users ðŸ‘»'
      parameters: []
      responses:
        '200':
          description: 'The found records'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseUserDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        -
          bearer: []
  '/users/{id}':
    get:
      operationId: UsersController_findOne
      summary: 'Retrieve one User ðŸ‘»'
      parameters:
        -
          name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: 'The found record'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseUserDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        -
          bearer: []
    put:
      operationId: UsersController_update
      summary: 'Update one User ðŸ‘»'
      parameters:
        -
          name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDto'
      responses:
        '200':
          description: 'The updated record'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseUserDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        -
          bearer: []
    delete:
      operationId: UsersController_remove
      summary: 'Delete one User ðŸ‘»'
      parameters:
        -
          name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: 'The deleted record'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseUserDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        -
          bearer: []
  /boards:
    post:
      operationId: BoardsController_create
      summary: 'Create one Board ðŸ‘»'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBoardDto'
      responses:
        '201':
          description: 'The found record'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBoardDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        -
          bearer: []
    get:
      operationId: BoardsController_findAll
      summary: 'Retrieve many Boards ðŸ‘»'
      parameters: []
      responses:
        '200':
          description: 'The found records'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseBoardDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        -
          bearer: []
  '/boards/{id}':
    get:
      operationId: BoardsController_findOne
      summary: 'Retrieve one Board ðŸ‘»'
      parameters:
        -
          name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: 'The found record'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBoardDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        -
          bearer: []
    put:
      operationId: BoardsController_update
      summary: 'Update one Board ðŸ‘»'
      parameters:
        -
          name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBoardDto'
      responses:
        '200':
          description: 'The updated record'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBoardDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        -
          bearer: []
    delete:
      operationId: BoardsController_remove
      summary: 'Delete one Board ðŸ‘»'
      parameters:
        -
          name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: 'The deleted record'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBoardDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        -
          bearer: []
  '/boards/{boardId}/tasks':
    post:
      operationId: TasksController_create
      summary: 'Create one Task ðŸ‘»'
      parameters:
        -
          name: boardId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskDto'
      responses:
        '201':
          description: 'The found record'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseTaskDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        -
          bearer: []
    get:
      operationId: TasksController_findAllByBoardId
      summary: 'Retrieve many Tasks ðŸ‘»'
      parameters:
        -
          name: boardId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: 'The found records'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseTaskDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        -
          bearer: []
  '/boards/{boardId}/tasks/{id}':
    get:
      operationId: TasksController_findOneByBoardIdAndTaskId
      summary: 'Retrieve one Task ðŸ‘»'
      parameters:
        -
          name: boardId
          required: true
          in: path
          schema:
            type: string
        -
          name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: 'The found record'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseTaskDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        -
          bearer: []
    put:
      operationId: TasksController_updateByBoardIdAndTaskId
      summary: 'Update one Task ðŸ‘»'
      parameters:
        -
          name: boardId
          required: true
          in: path
          schema:
            type: string
        -
          name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskDto'
      responses:
        '200':
          description: 'The updated record'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseTaskDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        -
          bearer: []
    delete:
      operationId: TasksController_removeByBoardIdAndTaskId
      summary: 'Delete one Task ðŸ‘»'
      parameters:
        -
          name: boardId
          required: true
          in: path
          schema:
            type: string
        -
          name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: 'The deleted record'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseTaskDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        -
          bearer: []
